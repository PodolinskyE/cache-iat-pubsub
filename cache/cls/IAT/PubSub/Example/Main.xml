<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="25">
<Class name="IAT.PubSub.Example.Main">
<Description><![CDATA[
Simple test class for Publisher-Subscriber.
<pre>
; create events and subscriber jobs
do ##class(IAT.PubSub.Example.Main).Setup()
; send some messages to channels
do ##class(IAT.PubSub.Example.Main).Run()
; show log
zw ^PubSub.Log
</pre>]]></Description>
<IncludeCode>IAT.PubSub</IncludeCode>
<Super>%RegisteredObject</Super>
<TimeCreated>63881,40236.348913</TimeCreated>

<Parameter name="ChannelPatient">
<Default>Patient</Default>
</Parameter>

<Parameter name="ChannelDummy">
<Default>Dummy</Default>
</Parameter>

<Method name="Setup">
<Description>
Config and setup Publisher-Subscriber </Description>
<ClassMethod>1</ClassMethod>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	set ret = $$$OK
	try {
		set $$$Config(..#ChannelPatient, "Subscriber", "IAT.PubSub.Example.SubPatient") = 4
		set $$$Config(..#ChannelDummy, "Subscriber", "IAT.PubSub.Example.SubDummy") = 2
		$$$ThrowOnError(##class(IAT.PubSub.Manager).Setup())
	} catch ex {
		set ret = ex.AsStatus()
	}
	quit ret
]]></Implementation>
</Method>

<Method name="Delete">
<Description>
Delete messages</Description>
<ClassMethod>1</ClassMethod>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	set ret = $$$OK
	try {
		$$$ThrowOnError(##class(IAT.PubSub.MsgBody).%DeleteExtent())
		$$$ThrowOnError(##class(IAT.PubSub.MsgHeader).%DeleteExtent())
	} catch ex {
		set ret = ex.AsStatus()
	}
	quit ret
]]></Implementation>
</Method>

<Method name="Run">
<Description>
Run tests. Send some messages channels.</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>pNum:%Integer=5</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	set ret = $$$OK
	try {
		$$$ThrowOnError(..SendPatient(pNum))
		$$$ThrowOnError(..SendDummy(pNum))
	} catch ex {
		set ret = ex.AsStatus()
		$$$LOG($system.Status.GetErrorText(ret))
	}
	quit ret
]]></Implementation>
</Method>

<Method name="SendPatient">
<Description>
Publish messages in patient channel</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>pNum:%Integer=5</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	set ret = $$$OK
	try {
		for i=1:1:pNum {
			set data = ##class(IAT.PubSub.Example.MsgPatient).%New()
			set data.MRN = i
			set data.Name = i
			set data.LastName = i
			$$$ThrowOnError(data.%Save())
			
			$$$LOG("Sending data "_i_" to "_..#ChannelPatient)
			$$$ThrowOnError(##class(IAT.PubSub.Publisher).Send(..#ChannelPatient, data))
		}
	} catch ex {
		set ret = ex.AsStatus()
	}
	quit ret
]]></Implementation>
</Method>

<Method name="SendDummy">
<Description>
Publish messages in dummy channel</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>pNum:%Integer=5</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	set ret = $$$OK
	try {
		for i=1:1:pNum {
			set data = ##class(IAT.PubSub.Example.MsgDummy).%New()
			set data.Text = i
			$$$ThrowOnError(data.%Save())
			
			$$$LOG("Sending data "_i_" to "_..#ChannelDummy)
			$$$ThrowOnError(##class(IAT.PubSub.Publisher).Send(..#ChannelDummy, data))
		}
	} catch ex {
		set ret = ex.AsStatus()
	}
	quit ret
]]></Implementation>
</Method>
</Class>
</Export>
